=== eVend devices ===

All eVend devices (more or less) respect following command addressing scheme.
Like "standard" MDB devices:
- base+0 (example: 40,78) - RESET
- base+1 (41,79) - SETUP (long response with firmware version, etc)
- base+3 (43,7B) - POLL (often returns 1 byte)
eVend specific:
- base+2 (42,7A) XX... - device specific commands
- base+4 (44,7C) 02 - get error code, call this when POLL returns byte with 08 bit mask set (08, 0c, 48, etc)
- base+5 (45,7D) XX... - device specific configuration
- base+6 (46,7E) 02 upgrade firmware block 16 byte. after finishing 03 XX XX (may be checksum) 

In device sections below, only unique commands are listed.

POLL response is often single byte with following bit mask values:
- 04 - soft-timeout? Sending POLL more often makes this disappear.
- 08 - error, must call base+4 02 to get documented error code
- 50 - busy

In device sections below, only unique POLL responses are listed.


=== Hoppers ===

May have separate address per hopper or multiplexer board (каретка) with a single address.
Base addresses of hopper boards:
- 1 - 40
- 2 - 48
- 3 - 50
- 4 - 58
- 5 - 60
- 6 - 68
- 7 - 70
- 8 - 78
- multiplexer - B8

Commands:
base+2 (42,5A,etc) XX - run motor for XX * 0.1s

BA TODO


=== Valve block (C0) ===

Commands:
C4 11 - get hot water temperature (1 byte)
C5 10 YY - set temperature YY degrees Celsius

C2 01 YY - pour hot water for YY units (1.538462 ml)
C2 02 YY - pour cold water for YY units (1.538462 ml)
C2 03 YY - pour espresso water for YY units (1.538462 ml)
C2 10 YY - cold valve (YY: 1=open / 2=close)
C2 11 YY - hot valve (YY: 1=open / 2=close)
C2 12 YY - boiler valve (YY: 1=open / 2=close)
C2 13 YY - espresso pump (YY: 1=start / 0=stop)
C2 14 YY - pump (YY: 1=start / 0=stop)

POLL response common bits:
04 - soft-timeout? Sending POLL more often makes this disappear.
08 - error, call C4 02 to get documented error code
POLL response unique bits:
10 - busy pouring water
40 - hot temperature not in range

Examples:
C4 11 -> 17 -- what is hot water temp? 22C
C5 10 55 -- make it 85C
C3 -> 44 -- hot temp. not in range and should repeat POLL
C2 01 4E -- pour 120ml of hot water
C3 -> 50 -- hot temp. not in range and busy pouring water


=== Mixer (C8) / Elevator (D0) ===

Same PCB, device address is chosen with 4th DIP switch: on=elevator (lift), off=mixer.

Mixer:
CA 01 YY ZZ - shake (run motor for YY * 0.1s, ZZ: speed 0-100%, 00-64 hex)
CA 02 YY 00 - fan (YY: 01=on / 00=off)
CA 03 YY 64 - move mixer up/down (YY: 0-100%, 00-64 hex) (this command is called "reverse")

Elevator:
D2 03 ?? ?? - move

POLL response:
04 XX - error, XX=code
0D 00 - success


=== Conveyor (D8) ===

Commands:
DD 10 XX - set speed. speed range 500 - 200 steps/minute. 1C=500 3C=200. unit=15steps

DA 01 HI LO - move to position (HI>>8)+LO
DA 03 YY 00 - shake YY times - rapid forward-backward movement

Before using Move command, must move to 0 = init device.


=== Cup dispenser (E0) ===

Commands:
E2 01 - get cup
E2 02 - turn on leds
E2 03 - turn off leds
E2 04 - check cup

ВСЕГДА после выдачи стакана POLL должен ответить 50 (время на выдачу не нулевое) иначе проблема с мигриком.


=== Espresso (E8) ===

Commands:
EA 01 - grind
EA 02 - press grounds into tablet
EA 03 - dispose tablet (motor runs until top position sensor opens circuit)
EA 05 - TODO (seemingly) turn on tablet heating
EA 06 - TODO (seemingly) turn off tablet heating

ВАЖНО
Команда выбросить таблетку имитирует деятельность и при отключенном моторе: POLL отвечает 50 в течение 2.18с, потом пусто (ACK).
Нижний сенсор также игнорируется. Через какое-то время говорит что сделал.
Заклиненная мололка дает "просадку" по питанию.
