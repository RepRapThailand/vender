syntax = "proto3";
package tele;

enum State {
  Invalid = 0;
  Boot = 1;
  Nominal = 2;
  Disconnected = 3;
  Problem = 4;
  Service = 5;
}

// Optimising for rare, bulk delivery on cell network.
// "Touching network" is expensive, while 10 or 900 bytes is about same cost.
message Telemetry {
  int32 vm_id = 1;
  Error error = 2;
  Inventory inventory = 3;
  Money money = 4;
  Transaction transaction = 5;
  Stat stat = 6;

  message Error {
    uint32 code = 1;
    string message = 2;
    uint32 count = 3;
  }

  message Inventory {
    repeated StockItem stocks = 1;
    message StockItem {
      uint32 code = 1;
      int32 value = 2;
      string name = 3;
      int32 hopper = 4;
    }
  }

  message Money {
    uint32 total_bills = 1;
    uint32 total_coins = 2;
    repeated uint32 bills = 3;
    repeated uint32 coins = 4;
  }

  message Transaction {
    int32 code = 1;
    repeated int32 options = 2;
    uint32 price = 3;
    PaymentMethod payment_method = 4;
    uint32 credit_bills = 5;
    uint32 credit_coins = 6;
  }

  message Stat {
    map<uint32,uint32> bill_rejected = 16;
    map<uint32,uint32> coin_rejected = 17;
  }
}
enum PaymentMethod {
  Nothing = 0;
  Cash = 1;
  Cashless = 2;
  Gift = 3;
}

message Command {
  uint32 id = 1;
  string reply_topic = 2;
  oneof task {
    ArgReport report = 3;
    ArgAbort abort = 4;
    ArgDispense dispense = 5;
    ArgSetGiftCredit set_gift_credit = 6;
    ArgPing ping = 7;
  }

  message ArgReport {}
  message ArgAbort {}
  message ArgDispense { uint32 amount = 1; }
  message ArgSetGiftCredit { uint32 amount = 1; }
  message ArgPing {}
}
message Response {
  uint32 command_id = 1;
  string error = 2;
  string data = 3;
  string INTERNAL_topic = 2048; // convenience
}
